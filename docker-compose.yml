services:
  web:
    build:
      context: .
    ports:
      - '8000:8000'
    restart: always
    container_name: 'telegram_price-bot'
    volumes:
      - .:/app
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    command: >
      sh -c "python main.py"
    depends_on:
      - database
      - selenium
      - redis
    networks:
      my_network:
        ipv4_address: '172.19.0.2'


  selenium:
    image: 'selenium/standalone-chrome'
    ports:
      - '4444:4444'
      - '7900:7900'
    restart: always
    shm_size: '512m'
    volumes:
      - /dev/shm:/dev/shm
    container_name: 'selenium_grid'
    networks:
      my_network:
        ipv4_address: '172.19.0.3'

  database:
    image: postgres:16.2-alpine
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass
    ports:
      - "54320:5432"
    networks:
      my_network:
        ipv4_address: '172.19.0.4'

  redis:
    image: redis:7.2.4-alpine
    restart: always
    hostname: redis
    command: redis-server
    ports:
      - '6379:6379'
    networks:
      my_network:
        ipv4_address: '172.19.0.5'


  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A src.monitoring.tasks worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    links:
      - redis
    depends_on:
      - web
      - redis
      - database
    networks:
      my_network:
        ipv4_address: '172.19.0.6'

  scheduler:
    build:
      context: .
    hostname: scheduler
    entrypoint: sh
#    entrypoint: celery
    command: -c "sleep 10 && celery -A src.monitoring.tasks beat -l INFO"

#    command: -A src.monitoring.tasks beat -l INFO
    volumes:
      - .:/app
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    links:
      - redis
    depends_on:
      - web
      - redis
      - database
    networks:
      my_network:
        ipv4_address: '172.19.0.7'
  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A src.monitoring.tasks flower
    volumes:
      - .:/app
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    depends_on:
      - redis
    ports:
      - "5555:5555"
    networks:
      my_network:
        ipv4_address: '172.19.0.8'

networks:
  my_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: '172.19.0.0/24'